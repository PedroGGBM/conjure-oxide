MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 6
# CSE_active_eliminated_expressions = 12
# CSE_active_total_size = 18
**VARIABLES**
DISCRETE x_ExplicitWithFlags_Flags_00001 #
{0..2}
DISCRETE x_ExplicitWithFlags_Flags_00002 #
{0..2}
DISCRETE x_ExplicitWithFlags_Flags_00003 #
{0..2}
DISCRETE x_ExplicitWithFlags_Flags_00004 #
{0..2}
DISCRETE x_ExplicitWithFlags_Values_00001 #
{1..2}
DISCRETE x_ExplicitWithFlags_Values_00002 #
{1..2}
DISCRETE x_ExplicitWithFlags_Values_00003 #
{1..2}
DISCRETE x_ExplicitWithFlags_Values_00004 #
{1..2}
BOOL aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00002=x_ExplicitWithFlags_Values_00004)
BOOL aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00002=x_ExplicitWithFlags_Values_00003)
BOOL aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00003=x_ExplicitWithFlags_Values_00004)
BOOL aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00001=x_ExplicitWithFlags_Values_00003)
BOOL aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00001=x_ExplicitWithFlags_Values_00004)
BOOL aux5 #Active-CSE: 2 occurrences of this expression or equivalent: (x_ExplicitWithFlags_Values_00001=x_ExplicitWithFlags_Values_00002)
BOOL aux6 #(0<x_ExplicitWithFlags_Flags_00001)
DISCRETE aux7 #(x_ExplicitWithFlags_Flags_00002 * aux5)
{0..2}
DISCRETE aux8 #(x_ExplicitWithFlags_Flags_00003 * aux3)
{0..2}
DISCRETE aux9 #(x_ExplicitWithFlags_Flags_00004 * aux4)
{0..2}
BOOL aux10 #(0<x_ExplicitWithFlags_Flags_00002)
DISCRETE aux11 #(x_ExplicitWithFlags_Flags_00001 * aux5)
{0..2}
DISCRETE aux12 #(x_ExplicitWithFlags_Flags_00003 * aux1)
{0..2}
DISCRETE aux13 #(x_ExplicitWithFlags_Flags_00004 * aux0)
{0..2}
BOOL aux14 #(0<x_ExplicitWithFlags_Flags_00003)
DISCRETE aux15 #(x_ExplicitWithFlags_Flags_00001 * aux3)
{0..2}
DISCRETE aux16 #(x_ExplicitWithFlags_Flags_00002 * aux1)
{0..2}
DISCRETE aux17 #(x_ExplicitWithFlags_Flags_00004 * aux2)
{0..2}
BOOL aux18 #(0<x_ExplicitWithFlags_Flags_00004)
DISCRETE aux19 #(x_ExplicitWithFlags_Flags_00001 * aux4)
{0..2}
DISCRETE aux20 #(x_ExplicitWithFlags_Flags_00002 * aux0)
{0..2}
DISCRETE aux21 #(x_ExplicitWithFlags_Flags_00003 * aux2)
{0..2}
BOOL aux22 #(0<x_ExplicitWithFlags_Flags_00002)
BOOL aux23 #(0<x_ExplicitWithFlags_Flags_00003)
BOOL aux24 #(0<x_ExplicitWithFlags_Flags_00004)
BOOL aux25 #(x_ExplicitWithFlags_Flags_00001=0)
BOOL aux26 #(x_ExplicitWithFlags_Flags_00002=0)
BOOL aux27 #(x_ExplicitWithFlags_Flags_00003=0)
BOOL aux28 #(x_ExplicitWithFlags_Flags_00004=0)
BOOL aux29 #(0<x_ExplicitWithFlags_Flags_00002)
BOOL aux30 #(0<x_ExplicitWithFlags_Flags_00003)
BOOL aux31 #(0<x_ExplicitWithFlags_Flags_00004)
**SEARCH**
PRINT[[x_ExplicitWithFlags_Flags_00001],[x_ExplicitWithFlags_Flags_00002],[x_ExplicitWithFlags_Flags_00003],[x_ExplicitWithFlags_Flags_00004],[x_ExplicitWithFlags_Values_00001],[x_ExplicitWithFlags_Values_00002],[x_ExplicitWithFlags_Values_00003],[x_ExplicitWithFlags_Values_00004]]
**CONSTRAINTS**
reify(ineq(0, x_ExplicitWithFlags_Flags_00001, -1), aux6)
product(x_ExplicitWithFlags_Flags_00002, aux5, aux7)
product(x_ExplicitWithFlags_Flags_00003, aux3, aux8)
product(x_ExplicitWithFlags_Flags_00004, aux4, aux9)
reify(ineq(0, x_ExplicitWithFlags_Flags_00002, -1), aux10)
product(x_ExplicitWithFlags_Flags_00001, aux5, aux11)
product(x_ExplicitWithFlags_Flags_00003, aux1, aux12)
product(x_ExplicitWithFlags_Flags_00004, aux0, aux13)
reify(ineq(0, x_ExplicitWithFlags_Flags_00003, -1), aux14)
product(x_ExplicitWithFlags_Flags_00001, aux3, aux15)
product(x_ExplicitWithFlags_Flags_00002, aux1, aux16)
product(x_ExplicitWithFlags_Flags_00004, aux2, aux17)
reify(ineq(0, x_ExplicitWithFlags_Flags_00004, -1), aux18)
product(x_ExplicitWithFlags_Flags_00001, aux4, aux19)
product(x_ExplicitWithFlags_Flags_00002, aux0, aux20)
product(x_ExplicitWithFlags_Flags_00003, aux2, aux21)
reify(ineq(0, x_ExplicitWithFlags_Flags_00002, -1), aux22)
reify(ineq(0, x_ExplicitWithFlags_Flags_00003, -1), aux23)
reify(ineq(0, x_ExplicitWithFlags_Flags_00004, -1), aux24)
reify(w-literal(x_ExplicitWithFlags_Flags_00001,0), aux25)
reify(w-literal(x_ExplicitWithFlags_Flags_00002,0), aux26)
reify(w-literal(x_ExplicitWithFlags_Flags_00003,0), aux27)
reify(w-literal(x_ExplicitWithFlags_Flags_00004,0), aux28)
reify(ineq(0, x_ExplicitWithFlags_Flags_00002, -1), aux29)
reify(ineq(0, x_ExplicitWithFlags_Flags_00003, -1), aux30)
reify(ineq(0, x_ExplicitWithFlags_Flags_00004, -1), aux31)
reify(gaceq(x_ExplicitWithFlags_Values_00002,x_ExplicitWithFlags_Values_00004), aux0)
reify(gaceq(x_ExplicitWithFlags_Values_00002,x_ExplicitWithFlags_Values_00003), aux1)
reify(gaceq(x_ExplicitWithFlags_Values_00003,x_ExplicitWithFlags_Values_00004), aux2)
reify(gaceq(x_ExplicitWithFlags_Values_00001,x_ExplicitWithFlags_Values_00003), aux3)
reify(gaceq(x_ExplicitWithFlags_Values_00001,x_ExplicitWithFlags_Values_00004), aux4)
reify(gaceq(x_ExplicitWithFlags_Values_00001,x_ExplicitWithFlags_Values_00002), aux5)
sumleq([x_ExplicitWithFlags_Flags_00001,x_ExplicitWithFlags_Flags_00002,x_ExplicitWithFlags_Flags_00003,x_ExplicitWithFlags_Flags_00004],4)
reifyimply(sumleq([x_ExplicitWithFlags_Flags_00001,aux7,aux8,aux9],0), aux6)
reifyimply(sumleq([x_ExplicitWithFlags_Flags_00002,aux11,aux12,aux13],0), aux10)
reifyimply(sumleq([x_ExplicitWithFlags_Flags_00003,aux15,aux16,aux17],0), aux14)
reifyimply(sumleq([x_ExplicitWithFlags_Flags_00004,aux19,aux20,aux21],0), aux18)
reifyimply(ineq(x_ExplicitWithFlags_Values_00001, x_ExplicitWithFlags_Values_00002, -1), aux22)
reifyimply(ineq(x_ExplicitWithFlags_Values_00002, x_ExplicitWithFlags_Values_00003, -1), aux23)
reifyimply(ineq(x_ExplicitWithFlags_Values_00003, x_ExplicitWithFlags_Values_00004, -1), aux24)
reifyimply(w-literal(x_ExplicitWithFlags_Values_00001,1), aux25)
reifyimply(w-literal(x_ExplicitWithFlags_Values_00002,1), aux26)
reifyimply(w-literal(x_ExplicitWithFlags_Values_00003,1), aux27)
reifyimply(w-literal(x_ExplicitWithFlags_Values_00004,1), aux28)
reifyimply(ineq(0, x_ExplicitWithFlags_Flags_00001, -1), aux29)
reifyimply(ineq(0, x_ExplicitWithFlags_Flags_00002, -1), aux30)
reifyimply(ineq(0, x_ExplicitWithFlags_Flags_00003, -1), aux31)
**EOF**
