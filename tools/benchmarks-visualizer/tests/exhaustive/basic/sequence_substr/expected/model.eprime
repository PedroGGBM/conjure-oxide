language ESSENCE' 1.0

find b_ExplicitBounded_Length: int(0..2)
find b_ExplicitBounded_Values: matrix indexed by [int(1..2)] of int(1..3)
branching on [b_ExplicitBounded_Length, b_ExplicitBounded_Values]
such that
    or([and([q5 <= b_ExplicitBounded_Length ->
             b_ExplicitBounded_Values[q5] =
             sum([toInt(1 = q3 + q5) * 3, toInt(2 = q3 + q5), toInt(3 = q3 + q5) * 2; int(1..3)])
             /\ q3 + q5 <= 3
                 | q5 : int(1..2)])
            | q3 : int(0..2)]),
    and([q1 > b_ExplicitBounded_Length -> b_ExplicitBounded_Values[q1] = 1 | q1 : int(1..2)]),
    b_ExplicitBounded_Length <= 2

